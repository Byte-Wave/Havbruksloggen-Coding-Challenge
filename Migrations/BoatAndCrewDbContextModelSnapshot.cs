// <auto-generated />
using System;
using Havbruksloggen_Coding_Challenge.BoatAndCrewManager.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Havbruksloggen_Coding_Challenge.Migrations
{
    [DbContext(typeof(BoatAndCrewDbContext))]
    partial class BoatAndCrewDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Havbruksloggen_Coding_Challenge.BoatAndCrewMemberManager.Models.Database.Entities.BoatEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UUID")
                        .HasColumnName("boat_id");

                    b.Property<int>("BuildNumber")
                        .HasColumnType("int")
                        .HasColumnName("build_number");

                    b.Property<float>("MaximumLength")
                        .HasColumnType("float")
                        .HasColumnName("maximum_length");

                    b.Property<float>("MaximumWidth")
                        .HasColumnType("float")
                        .HasColumnName("maximum_width");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("PicturesPath")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("pictures_path");

                    b.Property<string>("Producer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("producer");

                    b.HasKey("Id")
                        .HasName("PK_BoatId");

                    b.ToTable("Boats");
                });

            modelBuilder.Entity("Havbruksloggen_Coding_Challenge.BoatAndCrewMemberManager.Models.Database.Entities.CrewMemberEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UUID")
                        .HasColumnName("crew_member_id");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<Guid>("BoatId")
                        .HasColumnType("UUID")
                        .HasColumnName("boat_id");

                    b.Property<DateOnly>("CertifiedUntil")
                        .HasColumnType("date")
                        .HasColumnName("certified_until");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pictures_path");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("PicturesPath")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pictures_path");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("crew_role");

                    b.HasKey("Id")
                        .HasName("PK_CrewMemberId");

                    b.HasIndex("BoatId");

                    b.ToTable("CrewMembers");
                });

            modelBuilder.Entity("Havbruksloggen_Coding_Challenge.BoatAndCrewMemberManager.Models.Database.Entities.CrewMemberEntity", b =>
                {
                    b.HasOne("Havbruksloggen_Coding_Challenge.BoatAndCrewMemberManager.Models.Database.Entities.BoatEntity", "Boat")
                        .WithMany("CrewMembers")
                        .HasForeignKey("BoatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boat");
                });

            modelBuilder.Entity("Havbruksloggen_Coding_Challenge.BoatAndCrewMemberManager.Models.Database.Entities.BoatEntity", b =>
                {
                    b.Navigation("CrewMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
